<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classhra_1_1per_1_1FileStorage" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>hra::per::FileStorage</compoundname>
    <includes refid="file__storage_8h" local="no">file_storage.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhra_1_1per_1_1FileStorage_1a79968cbcc87235bc472aa87d38267f27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hra::per::FileStorage::FileStorage</definition>
        <argsstring>()=default</argsstring>
        <name>FileStorage</name>
        <briefdescription>
<para>Constructor for <ref refid="classhra_1_1per_1_1FileStorage" kindref="compound">FileStorage</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file_storage.h" line="29" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhra_1_1per_1_1FileStorage_1a0bf56de07617ec5ada880c47a112bc8f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>hra::per::FileStorage::FileStorage</definition>
        <argsstring>(FileStorage &amp;&amp;fs) noexcept=default</argsstring>
        <name>FileStorage</name>
        <param>
          <type><ref refid="classhra_1_1per_1_1FileStorage" kindref="compound">FileStorage</ref> &amp;&amp;</type>
          <declname>fs</declname>
        </param>
        <briefdescription>
<para>Move constructor for <ref refid="classhra_1_1per_1_1FileStorage" kindref="compound">FileStorage</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fs</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classhra_1_1per_1_1FileStorage" kindref="compound">FileStorage</ref> object to be moved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file_storage.h" line="36" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhra_1_1per_1_1FileStorage_1a38c520696e6eacbadddeacccc101c942" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classhra_1_1per_1_1FileStorage" kindref="compound">FileStorage</ref> &amp;</type>
        <definition>FileStorage&amp; hra::per::FileStorage::operator=</definition>
        <argsstring>(FileStorage &amp;&amp;fs) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhra_1_1per_1_1FileStorage" kindref="compound">FileStorage</ref> &amp;&amp;</type>
          <declname>fs</declname>
        </param>
        <briefdescription>
<para>Move assignment operator for <ref refid="classhra_1_1per_1_1FileStorage" kindref="compound">FileStorage</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">fs</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classhra_1_1per_1_1FileStorage" kindref="compound">FileStorage</ref> object to be moved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The moved <ref refid="classhra_1_1per_1_1FileStorage" kindref="compound">FileStorage</ref> object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file_storage.h" line="44" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classhra_1_1per_1_1FileStorage_1af855a4395ece168c44008bf6aa8813b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hra::per::FileStorage::FileStorage</definition>
        <argsstring>(const FileStorage &amp;)=delete</argsstring>
        <name>FileStorage</name>
        <param>
          <type>const <ref refid="classhra_1_1per_1_1FileStorage" kindref="compound">FileStorage</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The copy constructor for <ref refid="classhra_1_1per_1_1FileStorage" kindref="compound">FileStorage</ref> shall not be used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file_storage.h" line="49" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhra_1_1per_1_1FileStorage_1ad104468921cbc420343b2ee0cb070d54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhra_1_1per_1_1FileStorage" kindref="compound">FileStorage</ref> &amp;</type>
        <definition>FileStorage&amp; hra::per::FileStorage::operator=</definition>
        <argsstring>(const FileStorage &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classhra_1_1per_1_1FileStorage" kindref="compound">FileStorage</ref> &amp;</type>
        </param>
        <briefdescription>
<para>The copy assignment operator for <ref refid="classhra_1_1per_1_1FileStorage" kindref="compound">FileStorage</ref> shall not be used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file_storage.h" line="54" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classhra_1_1per_1_1FileStorage_1aaff2ea87d55ee7a17aab2401c6b20c5b" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="virtual">
        <type></type>
        <definition>virtual hra::per::FileStorage::~FileStorage</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>~FileStorage</name>
        <briefdescription>
<para>Destructor for <ref refid="classhra_1_1per_1_1FileStorage" kindref="compound">FileStorage</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file_storage.h" line="59" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classhra_1_1per_1_1FileStorage_1abfb7ec07f6398253782e0162d1e385ff" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>hra::core::Result&lt; std::vector&lt; std::string &gt; &gt;</type>
        <definition>virtual hra::core::Result&lt;std::vector&lt;std::string&gt; &gt; hra::per::FileStorage::GetAllFilesName</definition>
        <argsstring>() const noexcept=0</argsstring>
        <name>GetAllFilesName</name>
        <briefdescription>
<para>Returns a list of available files within this file storage. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A Result, containing a list of availables files, or one of the errors defined for Persistency in PerErrc. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file_storage.h" line="67" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classhra_1_1per_1_1FileStorage_1a1466c5e0064409895d01a7aaed2e08a8" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>hra::core::Result&lt; void &gt;</type>
        <definition>virtual hra::core::Result&lt;void&gt; hra::per::FileStorage::DeleteFile</definition>
        <argsstring>(hra::core::StringView file_name) noexcept=0</argsstring>
        <name>DeleteFile</name>
        <param>
          <type>hra::core::StringView</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
<para>Deletes a file from this proxy. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Result, containing true if the file exists or false if it does not, or one of the errors defined for Persistency in PerErrc. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file_storage.h" line="77" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classhra_1_1per_1_1FileStorage_1ab65d9b6160f64f9922fb0c5dd8b83196" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>hra::core::Result&lt; bool &gt;</type>
        <definition>virtual hra::core::Result&lt;bool&gt; hra::per::FileStorage::FileExists</definition>
        <argsstring>(hra::core::StringView file_name) const noexcept=0</argsstring>
        <name>FileExists</name>
        <param>
          <type>hra::core::StringView</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
<para>ueries if a file is available in this file storage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Result, containing true if the file exists or false if it does not, or one of the errors defined for Persistency in PerErrc. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file_storage.h" line="87" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classhra_1_1per_1_1FileStorage_1a9d560f8c6b1f9056cc54f022a330ff9d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>hra::core::Result&lt; void &gt;</type>
        <definition>virtual hra::core::Result&lt;void&gt; hra::per::FileStorage::RecoverFile</definition>
        <argsstring>(hra::core::StringView file_name) noexcept=0</argsstring>
        <name>RecoverFile</name>
        <param>
          <type>hra::core::StringView</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
<para>Recovers a file of this file storage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Result, ResourceBusyError if file is currently open,or one of the errors defined for Persistency in PerErrc. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file_storage.h" line="97" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classhra_1_1per_1_1FileStorage_1a1681dda803bedff2940b2e8c1215fc37" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>hra::core::Result&lt; void &gt;</type>
        <definition>virtual hra::core::Result&lt;void&gt; hra::per::FileStorage::ResetFile</definition>
        <argsstring>(hra::core::StringView file_name) noexcept=0</argsstring>
        <name>ResetFile</name>
        <param>
          <type>hra::core::StringView</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
<para>Reset a file of this file storage to its initial content. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Result, ResourceBusyError if file is currently open,or one of the errors defined for Persistency in PerErrc. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file_storage.h" line="107" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classhra_1_1per_1_1FileStorage_1a15a9859585b5d59c92b035f8062b468d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>hra::core::Result&lt; uint64_t &gt;</type>
        <definition>virtual hra::core::Result&lt;uint64_t&gt; hra::per::FileStorage::GetCurrentFileSize</definition>
        <argsstring>(hra::core::StringView file_name) noexcept=0</argsstring>
        <name>GetCurrentFileSize</name>
        <param>
          <type>hra::core::StringView</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
<para>Returns the space in bytes currently occupied by a file of this File <ref refid="structhra_1_1per_1_1Storage" kindref="compound">Storage</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Result, containing the occupied space in bytes, or one of the errors defined for Persistency in PerErrc. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file_storage.h" line="118" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classhra_1_1per_1_1FileStorage_1a4471edea8cc119cd0463fef9e4b9fe90" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>hra::core::Result&lt; std::unique_ptr&lt; <ref refid="classhra_1_1per_1_1ReadWriteAccessor" kindref="compound">ReadWriteAccessor</ref> &gt; &gt;</type>
        <definition>virtual hra::core::Result&lt;std::unique_ptr&lt;ReadWriteAccessor&gt; &gt; hra::per::FileStorage::OpenFileReadWrite</definition>
        <argsstring>(hra::core::StringView file_name, ReadAccessor::OpenMode mode=ReadAccessor::OpenMode(0), bool multi_process_access=true) noexcept=0</argsstring>
        <name>OpenFileReadWrite</name>
        <param>
          <type>hra::core::StringView</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type><ref refid="classhra_1_1per_1_1ReadAccessor_1aabb56495f2db04addf69743ad3ca666c" kindref="member">ReadAccessor::OpenMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="classhra_1_1per_1_1ReadAccessor_1aabb56495f2db04addf69743ad3ca666c" kindref="member">ReadAccessor::OpenMode</ref>(0)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>multi_process_access</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Opens a file of the file storage for reading and writing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Mode with which the file shall be opened. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">multi_process_access</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag of whether supporting multiple process access, default true. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Result, containing a UniqueHandle, or one of the errors defined for Persistency in PerErrc. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file_storage.h" line="132" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhra_1_1per_1_1FileStorage_1a73a1dea4ed92367238562aa909c00765" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>hra::core::Result&lt; std::unique_ptr&lt; <ref refid="classhra_1_1per_1_1ReadAccessor" kindref="compound">ReadAccessor</ref> &gt; &gt;</type>
        <definition>virtual hra::core::Result&lt;std::unique_ptr&lt;ReadAccessor&gt; &gt; hra::per::FileStorage::OpenFileReadOnly</definition>
        <argsstring>(hra::core::StringView file_name, ReadAccessor::OpenMode mode=ReadAccessor::OpenMode(0), bool multi_process_access=true) noexcept=0</argsstring>
        <name>OpenFileReadOnly</name>
        <param>
          <type>hra::core::StringView</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type><ref refid="classhra_1_1per_1_1ReadAccessor_1aabb56495f2db04addf69743ad3ca666c" kindref="member">ReadAccessor::OpenMode</ref></type>
          <declname>mode</declname>
          <defval><ref refid="classhra_1_1per_1_1ReadAccessor_1aabb56495f2db04addf69743ad3ca666c" kindref="member">ReadAccessor::OpenMode</ref>(0)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>multi_process_access</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Opens a file of the file storage for reading. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file. file_name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Mode with which the file shall be opened. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">multi_process_access</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag of whether supporting multiple process access, default true. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Result, containing a UniqueHandle, or one of the errors defined for Persistency in PerErrc. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file_storage.h" line="146" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classhra_1_1per_1_1FileStorage_1a348d0cf0d422811a99f455130a1cfd2e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="pure-virtual">
        <type>hra::core::Result&lt; std::unique_ptr&lt; <ref refid="classhra_1_1per_1_1ReadWriteAccessor" kindref="compound">ReadWriteAccessor</ref> &gt; &gt;</type>
        <definition>virtual hra::core::Result&lt;std::unique_ptr&lt;ReadWriteAccessor&gt; &gt; hra::per::FileStorage::OpenFileWriteOnly</definition>
        <argsstring>(hra::core::StringView file_name, ReadAccessor::OpenMode mode, bool multi_process_access=true) noexcept=0</argsstring>
        <name>OpenFileWriteOnly</name>
        <param>
          <type>hra::core::StringView</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type><ref refid="classhra_1_1per_1_1ReadAccessor_1aabb56495f2db04addf69743ad3ca666c" kindref="member">ReadAccessor::OpenMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>multi_process_access</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Opens a file of the file storage for writing. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Mode with which the file shall be opened. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">multi_process_access</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag of whether supporting multiple process access, default true. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A Result, containing a UniqueHandle, or one of the errors defined for Persistency in PerErrc. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/file_storage.h" line="162" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classhra_1_1per_1_1FileStorage" kindref="compound">FileStorage</ref> creates objects to read or write memory blocks. Which block is going to be read or written is specified by a key. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/file_storage.h" line="24" column="18" bodyfile="include/file_storage.h" bodystart="24" bodyend="165"/>
    <listofallmembers>
      <member refid="classhra_1_1per_1_1FileStorage_1a1466c5e0064409895d01a7aaed2e08a8" prot="public" virt="pure-virtual"><scope>hra::per::FileStorage</scope><name>DeleteFile</name></member>
      <member refid="classhra_1_1per_1_1FileStorage_1ab65d9b6160f64f9922fb0c5dd8b83196" prot="public" virt="pure-virtual"><scope>hra::per::FileStorage</scope><name>FileExists</name></member>
      <member refid="classhra_1_1per_1_1FileStorage_1a79968cbcc87235bc472aa87d38267f27" prot="public" virt="non-virtual"><scope>hra::per::FileStorage</scope><name>FileStorage</name></member>
      <member refid="classhra_1_1per_1_1FileStorage_1a0bf56de07617ec5ada880c47a112bc8f" prot="public" virt="non-virtual"><scope>hra::per::FileStorage</scope><name>FileStorage</name></member>
      <member refid="classhra_1_1per_1_1FileStorage_1af855a4395ece168c44008bf6aa8813b1" prot="public" virt="non-virtual"><scope>hra::per::FileStorage</scope><name>FileStorage</name></member>
      <member refid="classhra_1_1per_1_1FileStorage_1abfb7ec07f6398253782e0162d1e385ff" prot="public" virt="pure-virtual"><scope>hra::per::FileStorage</scope><name>GetAllFilesName</name></member>
      <member refid="classhra_1_1per_1_1FileStorage_1a15a9859585b5d59c92b035f8062b468d" prot="public" virt="pure-virtual"><scope>hra::per::FileStorage</scope><name>GetCurrentFileSize</name></member>
      <member refid="classhra_1_1per_1_1FileStorage_1a73a1dea4ed92367238562aa909c00765" prot="public" virt="pure-virtual"><scope>hra::per::FileStorage</scope><name>OpenFileReadOnly</name></member>
      <member refid="classhra_1_1per_1_1FileStorage_1a4471edea8cc119cd0463fef9e4b9fe90" prot="public" virt="pure-virtual"><scope>hra::per::FileStorage</scope><name>OpenFileReadWrite</name></member>
      <member refid="classhra_1_1per_1_1FileStorage_1a348d0cf0d422811a99f455130a1cfd2e" prot="public" virt="pure-virtual"><scope>hra::per::FileStorage</scope><name>OpenFileWriteOnly</name></member>
      <member refid="classhra_1_1per_1_1FileStorage_1a38c520696e6eacbadddeacccc101c942" prot="public" virt="non-virtual"><scope>hra::per::FileStorage</scope><name>operator=</name></member>
      <member refid="classhra_1_1per_1_1FileStorage_1ad104468921cbc420343b2ee0cb070d54" prot="public" virt="non-virtual"><scope>hra::per::FileStorage</scope><name>operator=</name></member>
      <member refid="classhra_1_1per_1_1FileStorage_1a9d560f8c6b1f9056cc54f022a330ff9d" prot="public" virt="pure-virtual"><scope>hra::per::FileStorage</scope><name>RecoverFile</name></member>
      <member refid="classhra_1_1per_1_1FileStorage_1a1681dda803bedff2940b2e8c1215fc37" prot="public" virt="pure-virtual"><scope>hra::per::FileStorage</scope><name>ResetFile</name></member>
      <member refid="classhra_1_1per_1_1FileStorage_1aaff2ea87d55ee7a17aab2401c6b20c5b" prot="public" virt="virtual"><scope>hra::per::FileStorage</scope><name>~FileStorage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
