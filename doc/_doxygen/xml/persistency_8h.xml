<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="persistency_8h" kind="file" language="C++">
    <compoundname>persistency.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="yes">core/instance_specifier.h</includes>
    <includes local="yes">core/result.h</includes>
    <includes local="yes">core/string_view.h</includes>
    <incdepgraph>
      <node id="2">
        <label>string</label>
      </node>
      <node id="1">
        <label>include/persistency.h</label>
        <link refid="persistency_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>core/string_view.h</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="4">
        <label>core/instance_specifier.h</label>
      </node>
      <node id="5">
        <label>core/result.h</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacehra">hra</innernamespace>
    <innernamespace refid="namespacehra_1_1per">hra::per</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>Horizon<sp/>Robotics,<sp/>Inc.<sp/>-<sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Unauthorized<sp/>copying<sp/>of<sp/>this<sp/>file,<sp/>via<sp/>any<sp/>medium<sp/>is<sp/>strictly<sp/>prohibited</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Proprietary<sp/>and<sp/>confidential</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;core/instance_specifier.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;core/result.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;core/string_view.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hra<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">per<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>RecoveryReportKind<sp/>:<sp/>uint32_t<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>kKeyValueStorageRecoveryFailed<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>kKeyValueStorageRecovered<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>kKeyRecoveryFailed<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>kKeyRecovered<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>kFileStorageRecoveryFailed<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>kFileStorageRecovered<sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>kFileRecoveryFailed<sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>kFileRecovered<sp/>=<sp/>8</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>CollectionUpdateStrategy<sp/>:<sp/>uint32_t<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>kKeepExisting<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>kDelete<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/>ElementUpdateStrategy<sp/>:<sp/>uint32_t<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>kOverwrite<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>kKeepExisting<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>kDelete<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>kNone<sp/>=<sp/>3</highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">hra::core::Result&lt;void&gt;<sp/>UpdatePersistency()<sp/>noexcept;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">hra::core::Result&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;<sp/>ResetPersistency()<sp/>noexcept;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RegisterApplicationDataUpdateCallback(</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(const<sp/>hra::core::InstanceSpecifier<sp/>&amp;storage,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;version)&gt;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_update_callback)<sp/>noexcept;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RegisterRecoveryReportCallback(</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(const<sp/>hra::core::InstanceSpecifier<sp/>&amp;storage,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hra::per::RecoveryReportKind<sp/>recovery_report_kind,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;<sp/>&amp;reported_elements,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>&amp;reportedi_instances)&gt;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recovery_report_callback)<sp/>noexcept;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>per</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hra</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/persistency.h"/>
  </compounddef>
</doxygen>
